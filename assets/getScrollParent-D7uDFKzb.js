class a{constructor(e){let{x:r,y:i,width:n,height:s}=e;this.x=r,this.y=i,this.width=n,this.height=s}get top(){return this.y}get bottom(){return this.y+this.height}get left(){return this.x}get right(){return this.x+this.width}}function w(t,e){return{x:{before:Math.max(0,e.left-t.left),after:Math.max(0,t.right-e.right)},y:{before:Math.max(0,e.top-t.top),after:Math.max(0,t.bottom-e.bottom)}}}function x(t){return Array.isArray(t)?new a({x:t[0],y:t[1],width:0,height:0}):t.getBoundingClientRect()}function p(t){const e=t.getBoundingClientRect(),r=getComputedStyle(t),i=r.transform;if(i){let n,s,o,c,f;if(i.startsWith("matrix3d("))n=i.slice(9,-1).split(/, /),s=+n[0],o=+n[5],c=+n[12],f=+n[13];else if(i.startsWith("matrix("))n=i.slice(7,-1).split(/, /),s=+n[0],o=+n[3],c=+n[4],f=+n[5];else return new a(e);const h=r.transformOrigin,l=e.x-c-(1-s)*parseFloat(h),d=e.y-f-(1-o)*parseFloat(h.slice(h.indexOf(" ")+1)),g=s?e.width/s:t.offsetWidth+1,m=o?e.height/o:t.offsetHeight+1;return new a({x:l,y:d,width:g,height:m})}else return new a(e)}function E(t,e,r){if(typeof t.animate>"u")return{finished:Promise.resolve()};let i;try{i=t.animate(e,r)}catch{return{finished:Promise.resolve()}}return typeof i.finished>"u"&&(i.finished=new Promise(n=>{i.onfinish=()=>{n(i)}})),i}const b="cubic-bezier(0.4, 0, 0.2, 1)",S="cubic-bezier(0.0, 0, 0.2, 1)",v="cubic-bezier(0.4, 0, 1, 1)";function M(t){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;for(;t;){if(e?y(t):u(t))return t;t=t.parentElement}return document.scrollingElement}function N(t,e){const r=[];if(e&&t&&!e.contains(t))return r;for(;t&&(u(t)&&r.push(t),t!==e);)t=t.parentElement;return r}function u(t){if(!t||t.nodeType!==Node.ELEMENT_NODE)return!1;const e=window.getComputedStyle(t);return e.overflowY==="scroll"||e.overflowY==="auto"&&t.scrollHeight>t.clientHeight}function y(t){if(!t||t.nodeType!==Node.ELEMENT_NODE)return!1;const e=window.getComputedStyle(t);return["scroll","auto"].includes(e.overflowY)}export{a as B,E as a,v as b,M as c,S as d,N as e,w as f,x as g,u as h,p as n,b as s};
